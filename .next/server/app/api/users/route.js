"use strict";(()=>{var e={};e.id=701,e.ids=[701],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},50849:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>x,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var r={};t.r(r),t.d(r,{GET:()=>c});var o=t(49303),a=t(88716),n=t(60670),u=t(87568),i=t(30728),p=t(87070);async function c(){await (0,u.Z)();try{let e=await i.Z.find({role:{$ne:"admin"}},{password:0});if(!e)return p.NextResponse.json({success:!1,message:"no users"},{status:404});return p.NextResponse.json({success:!0,users:e},{status:200})}catch(e){return console.log(e),p.NextResponse.json({success:!1,message:"failed to get users"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/users/route",pathname:"/api/users",filename:"route",bundlePath:"app/api/users/route"},resolvedPagePath:"C:\\Users\\dell\\Desktop\\Next_Resort\\resort_booking\\src\\app\\api\\users\\route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=d,x="/api/users/route";function f(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},49303:(e,s,t)=>{e.exports=t(30517)},87568:(e,s,t)=>{t.d(s,{Z:()=>o});let{default:r}=t(11185),o=async()=>{try{await r.connect(process.env.MONGO_URI),console.log("Database connected")}catch(e){console.log(e)}}},30728:(e,s,t)=>{t.d(s,{Z:()=>n});let{default:r,mongo:o}=t(11185),a=new r.Schema({username:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},role:{type:String,default:"user"},bookings:[{type:r.Schema.Types.ObjectId,ref:"booking"}]}),n=r.models.user||r.model("user",a)}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[948,70],()=>t(50849));module.exports=r})();